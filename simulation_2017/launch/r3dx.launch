<launch>

  <arg name="name" default="r3dx"/>
  <arg name="pos_x" default="1.0"/>
  <arg name="pos_y" default="1.0"/>
  <arg name="pos_z" default="0.5"/>
  <arg name="namespace_arg" default=""/>

  <arg name="model" default="$(find simulation_2017)/urdf/$(arg name).urdf"/>
  <!--<arg name="rvizconfig" default="$(find simulation_2017)/urdf.rviz" />-->

  <param name="robot_description" command="$(find xacro)/xacro.py $(arg model)" />

  <!-- push robot_description to factory and spawn robot in gazebo -->
  <node name="urdf_spawner" pkg="gazebo_ros" type="spawn_model"
        args="-z $(arg pos_z) -x $(arg pos_x) -y $(arg pos_y) -urdf -model $(arg name) -param robot_description" respawn="false" output="screen" />

  <!-- This param file is where any environment-agnostic (live or simulation)
  configuration should be loaded, including controllers -->
  <rosparam command="load" file="$(find simulation_2017)/config/control_r3dx.yaml" />

  <!-- This node loads the two controllers into a controller manager (real or simulated). The
  controllers are defined in config/control.yaml -->
  <node name="$(arg name)_controller_spawner" pkg="controller_manager" type="spawner"
    args="
          r3dx_joint_state_controller
          r3dx_diff_drive_controller
          --shutdown-timeout 3">
  </node>

  <node name = "minibot_navigator" pkg="simulation_2017" type="minibot_navigator.py">
    <remap from="/cmd_vel" to="$(arg namespace_arg)/r3dx_diff_drive_controller/cmd_vel" />
    <remap from="/odom" to="$(arg namespace_arg)/odom" />
    <remap from="/miniBot_poses" to="$(arg namespace_arg)/miniBot_poses" />
  </node>
</launch>
