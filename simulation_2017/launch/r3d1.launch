<launch>

  <arg name="model" default="$(find simulation_2017)/urdf/r3dx.urdf"/>
  <arg name="rvizconfig" default="$(find simulation_2017)/urdf.rviz" />

  

  <param name="robot_description" command="$(find xacro)/xacro.py $(arg model)" />

  <!-- push robot_description to factory and spawn robot in gazebo -->
  <node name="urdf_spawner1" pkg="gazebo_ros" type="spawn_model"
        args="-z .5 -x 1 -y 1 -unpause -urdf -model r3d1 -param robot_description" respawn="false" output="screen" />

  <!--<node name="rviz" pkg="rviz" type="rviz" args="-d $(arg rvizconfig)" />-->

  <!-- This param file is where any environment-agnostic (live or simulation)
  configuration should be loaded, including controllers -->
  <rosparam command="load" file="$(find simulation_2017)/config/control_r3dx.yaml" />

  <!-- This node loads the two controllers into a controller manager (real or simulated). The
  controllers are defined in config/control.yaml -->
  <node name="r3d1_controller_spawner" pkg="controller_manager" type="spawner"
    args="r3d1_joint_state_controller
          r3d1_diff_drive_controller
          --shutdown-timeout 3">
  </node>

  <!--<node name="rqt_robot_steering" pkg="rqt_robot_steering" type="rqt_robot_steering">
    <param name="default_topic" value="/r3d1_diff_drive_controller/cmd_vel"/>
  </node>-->

  <node name = "minibot_navigator" pkg="multi_robot" type="minibot_navigator.py" ns="r3d1">
    <!--<remap from="/cmd_vel" to="/r3d1_diff_drive_controller/cmd_vel" />
    <remap from="/odom" to="/r3d1/odom" />-->
  </node>
</launch>
