<launch>

  <arg name="model" default="$(find simulation_2017)/urdf/r4dx.urdf"/>
  <arg name="rvizconfig" default="$(find simulation_2017)/urdf.rviz" />

  <include file="$(find simulation_2017)/launch/r2d2_world.launch">
  </include>

  <param name="robot_description" command="$(find xacro)/xacro.py $(arg model)" />

  <!-- push robot_description to factory and spawn robot in gazebo -->
  <node name="urdf_spawner" pkg="gazebo_ros" type="spawn_model"
        args="-z 1.0 -x 1 -y 1 -unpause -urdf -model robot -param robot_description" respawn="false" output="screen" />

  <!--<node name="rviz" pkg="rviz" type="rviz" args="-d $(arg rvizconfig)" />-->

  <!-- This param file is where any environment-agnostic (live or simulation)
  configuration should be loaded, including controllers -->
  <rosparam command="load" file="$(find simulation_2017)/config/control_r4dx.yaml" />

  <!-- This node loads the two controllers into a controller manager (real or simulated). The
  controllers are defined in config/control.yaml -->
  <node name="r4d1_controller_spawner" pkg="controller_manager" type="spawner"
    args="r4d1_joint_state_controller
          r4d1_diff_drive_controller
          --shutdown-timeout 3">
  </node>

  <node name="rqt_robot_steering" pkg="rqt_robot_steering" type="rqt_robot_steering">
    <param name="default_topic" value="/r4d1_diff_drive_controller/cmd_vel"/>
  </node>
  <!--<node name = "navigator" pkg="aries" type="navigator.py">
    <remap from="cmd_vel" to="r4d1_diff_drive_controller/cmd_vel"/>
  </node>
  <node name = "beacon_localization" pkg = "aries" type = "beacon_localization.py" />-->

</launch>
