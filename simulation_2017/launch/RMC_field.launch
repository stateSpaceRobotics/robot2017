<launch>

    <arg name="model" default="$(find simulation_2017)/urdf/cr17.xacro"/>
    <arg name="rvizconfig" default="$(find simulation_2017)/urdf.rviz"/>

    <!-- these are the arguments you can pass this launch file, for example paused:=true -->
    <arg name="paused" default="false"/>
    <arg name="use_sim_time" default="true"/>
    <arg name="gui" default="true"/>
    <arg name="headless" default="false"/>
    <arg name="debug" default="false"/>

    <!-- We resume the logic in empty_world.launch, changing only the name of the world to be launched -->
    <include file="$(find gazebo_ros)/launch/empty_world.launch">
        <arg name="world_name" value="$(find simulation_2017)/worlds/RMCField_gazebo.world"/>
        <arg name="debug" value="$(arg debug)"/>
        <arg name="gui" value="$(arg gui)"/>
        <arg name="paused" value="$(arg paused)"/>
        <arg name="use_sim_time" value="$(arg use_sim_time)"/>
        <arg name="headless" value="$(arg headless)"/>
    </include>
    <param name="robot_description" command="$(find xacro)/xacro.py $(arg model)"/>

    <!-- push robot_description to factory and spawn robot in gazebo -->
    <node name="urdf_spawner" pkg="gazebo_ros" type="spawn_model"
          args="-z 1.0 -x 0 -y 1 -unpause -urdf -model robot -param robot_description" respawn="false" output="screen"/>

    <node name="rviz" pkg="rviz" type="rviz" args="-d $(arg rvizconfig)"/>

    <!-- This param file is where any environment-agnostic (live or simulation)
    configuration should be loaded, including controllers -->
    <rosparam command="load" file="$(find simulation_2017)/config/control_cr17.yaml"/>

    <node name="joint_state_publisher" pkg="joint_state_publisher" type="joint_state_publisher"/>
    <node name="robot_state_publisher" pkg="robot_state_publisher" type="state_publisher"/>


    <!-- This node loads the two controllers into a controller manager (real or simulated). The
    controllers are defined in config/control.yaml -->
    <node name="cr17_controller_spawner" pkg="controller_manager" type="spawner"
          args="cr17_joint_state_controller
          cr17_diff_drive_controller
          cr17_left_arm_controller
          cr17_right_arm_controller
          cr17_left_scoop_controller
          cr17_right_scoop_controller
          --shutdown-timeout 3"/>

</launch>
